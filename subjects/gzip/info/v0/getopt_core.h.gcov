        -:    0:Source:/usr/include/x86_64-linux-gnu/bits/getopt_core.h
        -:    0:Graph:gzip.gcno
        -:    0:Data:gzip.gcda
        -:    0:Runs:214
        -:    1:/* Declarations for getopt (basic, portable features only).
        -:    2:   Copyright (C) 1989-2022 Free Software Foundation, Inc.
        -:    3:   This file is part of the GNU C Library and is also part of gnulib.
        -:    4:   Patches to this file should be submitted to both projects.
        -:    5:
        -:    6:   The GNU C Library is free software; you can redistribute it and/or
        -:    7:   modify it under the terms of the GNU Lesser General Public
        -:    8:   License as published by the Free Software Foundation; either
        -:    9:   version 2.1 of the License, or (at your option) any later version.
        -:   10:
        -:   11:   The GNU C Library is distributed in the hope that it will be useful,
        -:   12:   but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   13:   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
        -:   14:   Lesser General Public License for more details.
        -:   15:
        -:   16:   You should have received a copy of the GNU Lesser General Public
        -:   17:   License along with the GNU C Library; if not, see
        -:   18:   <https://www.gnu.org/licenses/>.  */
        -:   19:
        -:   20:#ifndef _GETOPT_CORE_H
        -:   21:#define _GETOPT_CORE_H 1
        -:   22:
        -:   23:/* This header should not be used directly; include getopt.h or
        -:   24:   unistd.h instead.  Unlike most bits headers, it does not have
        -:   25:   a protective #error, because the guard macro for getopt.h in
        -:   26:   gnulib is not fixed.  */
        -:   27:
        -:   28:__BEGIN_DECLS
        -:   29:
        -:   30:/* For communication from 'getopt' to the caller.
        -:   31:   When 'getopt' finds an option that takes an argument,
        -:   32:   the argument value is returned here.
        -:   33:   Also, when 'ordering' is RETURN_IN_ORDER,
        -:   34:   each non-option ARGV-element is returned here.  */
        -:   35:
        -:   36:extern char *optarg;
        -:   37:
        -:   38:/* Index in ARGV of the next element to be scanned.
        -:   39:   This is used for communication to and from the caller
        -:   40:   and for communication between successive calls to 'getopt'.
        -:   41:
        -:   42:   On entry to 'getopt', zero means this is the first call; initialize.
        -:   43:
        -:   44:   When 'getopt' returns -1, this is the index of the first of the
        -:   45:   non-option elements that the caller should itself scan.
        -:   46:
        -:   47:   Otherwise, 'optind' communicates from one call to the next
        -:   48:   how much of ARGV has been scanned so far.  */
        -:   49:
        -:   50:extern int optind;
        -:   51:
        -:   52:/* Callers store zero here to inhibit the error message 'getopt' prints
        -:   53:   for unrecognized options.  */
        -:   54:
        -:   55:extern int opterr;
        -:   56:
        -:   57:/* Set to an option character which was unrecognized.  */
        -:   58:
        -:   59:extern int optopt;
        -:   60:
        -:   61:/* Get definitions and prototypes for functions to process the
        -:   62:   arguments in ARGV (ARGC of them, minus the program name) for
        -:   63:   options given in OPTS.
        -:   64:
        -:   65:   Return the option character from OPTS just read.  Return -1 when
        -:   66:   there are no more options.  For unrecognized options, or options
        -:   67:   missing arguments, 'optopt' is set to the option letter, and '?' is
        -:   68:   returned.
        -:   69:
        -:   70:   The OPTS string is a list of characters which are recognized option
        -:   71:   letters, optionally followed by colons, specifying that that letter
        -:   72:   takes an argument, to be placed in 'optarg'.
        -:   73:
        -:   74:   If a letter in OPTS is followed by two colons, its argument is
        -:   75:   optional.  This behavior is specific to the GNU 'getopt'.
        -:   76:
        -:   77:   The argument '--' causes premature termination of argument
        -:   78:   scanning, explicitly telling 'getopt' that there are no more
        -:   79:   options.
        -:   80:
        -:   81:   If OPTS begins with '-', then non-option arguments are treated as
        -:   82:   arguments to the option '\1'.  This behavior is specific to the GNU
        -:   83:   'getopt'.  If OPTS begins with '+', or POSIXLY_CORRECT is set in
        -:   84:   the environment, then do not permute arguments.
        -:   85:
        -:   86:   For standards compliance, the 'argv' argument has the type
        -:   87:   char *const *, but this is inaccurate; if argument permutation is
        -:   88:   enabled, the argv array (not the strings it points to) must be
        -:   89:   writable.  */
        -:   90:
function getopt called 0 returned 0% blocks executed 0%
    #####:   91:extern int getopt (int ___argc, char *const *___argv, const char *__shortopts)
call    0 never executed
        -:   92:       __THROW __nonnull ((2, 3));
        -:   93:
        -:   94:__END_DECLS
        -:   95:
        -:   96:#endif /* getopt_core.h */
